cc_defaults {
  name: "apex_defaults",
  cflags: [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-Wno-unused-parameter",

    // Some extra flags.
    "-fstrict-aliasing",
    "-Wredundant-decls",
    "-Wshadow",
    "-Wstrict-aliasing",
    "-Wthread-safety",
    "-Wthread-safety-negative",
    "-Wunreachable-code",
    "-Wunreachable-code-break",
    "-Wunreachable-code-return",
    "-Wunused",
    "-Wused-but-marked-unused",
  ],
  shared_libs: [
    "libbase",
    "libjsoncpp",
    "libprotobuf-cpp-full",
    "libziparchive",
    // Required full for parsing json string to message
    "libprotobuf-cpp-full",
  ],
  static_libs: [
    "lib_apex_session_state_proto",
    "lib_apex_manifest_proto"
  ],
}

aidl_interface {
  name: "apex_aidl_interface",
  srcs: [
    "aidl/android/apex/ApexInfo.aidl",
    "aidl/android/apex/ApexInfoList.aidl",
    "aidl/android/apex/ApexSessionInfo.aidl",
    "aidl/android/apex/IApexService.aidl",
  ],
  local_include_dir: "aidl",
  backend: {
      ndk: {
          enabled: false,
      },
  },
}

cc_binary {
  name: "apexd",
  defaults: [
    "apex_defaults",
    "libapexservice-deps",
  ],
  srcs: [
    "apexd_main.cpp",
  ],
  static_libs: [
    "libapex",
    "libapexd",
    "libapexservice",
    "libavb",
    "libdm",
  ],
  shared_libs: [
    "libselinux",
  ],
  init_rc: ["apexd.rc"],
}

cc_library_static {
  name: "libapexd",
  defaults: ["apex_defaults"],
  srcs: [
    "apexd.cpp",
    "apexd_loop.cpp",
    "apexd_prepostinstall.cpp",
    "apexd_private.cpp",
    "apexd_prop.cpp",
    "apexd_session.cpp"
  ],
  static_libs: [
    "libapex",
    "libavb",
    "libdm",
  ],
  shared_libs: [
    "libselinux",
  ],
  export_include_dirs: ["."],
}

cc_defaults {
  name: "libapexservice-deps",
  shared_libs: [
    "apex_aidl_interface-cpp",
    "libbinder",
    "libutils",
  ],
}
cc_library_static {
  name: "libapexservice",
  defaults: [
    "apex_defaults",
    "libapexservice-deps",
  ],
  srcs: ["apexservice.cpp"],
  static_libs: ["libapexd"],
}

cc_library_static {
  name: "libapex",
  defaults: ["apex_defaults"],
  srcs: [
    "apex_file.cpp",
    "apex_manifest.cpp",
  ],
  static_libs: ["libavb"],
  host_supported: true,
  target: {
    darwin: {
      enabled: false,
    },
  },
  header_libs: [
    "libutils_headers",
  ],
  export_header_lib_headers: [
    "libutils_headers",
  ],
  product_variables: {
    debuggable: {
      cflags: ["-DDEBUG_ALLOW_BUNDLED_KEY"],
    },
  },
}

cc_test {
  name: "apex_file_test",
  defaults: ["apex_defaults"],
  data: [
    ":apex.apexd_test",
    ":apex.apexd_test_no_inst_key",
  ],
  srcs: [
    "apex_file_test.cpp",
  ],
  host_supported: true,
  target: {
    darwin: {
      enabled: false,
    },
  },
  static_libs: [
    "libapex",
    "libavb",
  ],
  shared_libs: ["libziparchive"],
  test_suites: ["device-tests"],
  test_config: "apex_file_test_config.xml",  // TODO: Remove after b/117891984.
}

cc_test {
  name: "apex_manifest_test",
  defaults: ["apex_defaults"],
  srcs: [
    "apex_manifest_test.cpp",
  ],
  host_supported: true,
  target: {
    darwin: {
      enabled: false,
    },
  },
  static_libs: [
    "libapex",
    "libavb",
  ],
  test_suites: ["device-tests"],
}

cc_test {
  name: "apexservice_test",
  defaults: ["apex_defaults"],
  data: [
    ":apex.apexd_test",
    ":apex.apexd_test_different_app",
    ":apex.apexd_test_v2",
    ":apex.apexd_test_no_inst_key",
    ":apex.apexd_test_preinstall",
    ":apex.apexd_test_postinstall",
  ],
  srcs: ["apexservice_test.cpp"],
  host_supported: false,
  compile_multilib: "first",
  static_libs: [
    "apex_aidl_interface-cpp",
    "libapex",
    "libapexd",
    "libavb",
  ],
  shared_libs: [
    "libbinder",
    "libselinux",
    "libutils",
  ],
  test_suites: ["device-tests"],
  test_config: "apexservice_test_config.xml",  // TODO: Remove after b/117891984.
}
